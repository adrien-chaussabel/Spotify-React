{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Test\\\\Documents\\\\Spotify-React\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Test\\\\Documents\\\\Spotify-React\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Test\\\\Documents\\\\Spotify-React\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Test\\\\Documents\\\\Spotify-React\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Test\\\\Documents\\\\Spotify-React\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Test\\\\Documents\\\\Spotify-React\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nvar spotifyWebApi = new SpotifyWebApi();\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    var params = _this.getHashParams();\n\n    var token = params.access_token;\n\n    if (token) {\n      spotifyWebApi.setAccessToken(token);\n    }\n\n    _this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        albumArt: ''\n      }\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getHashParams\",\n    value: function getHashParams() {\n      var hashParams = {};\n      var e,\n          r = /([^&;=]+)=?([^&;]*)/g,\n          q = window.location.hash.substring(1);\n      e = r.exec(q);\n\n      while (e) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        e = r.exec(q);\n      }\n\n      return hashParams;\n    }\n  }, {\n    key: \"getNowPlaying\",\n    value: function getNowPlaying() {\n      var _this2 = this;\n\n      spotifyWebApi.getMyCurrentPlaybackState().then(function (response) {\n        _this2.setState({\n          nowPlaying: {\n            name: response.item.name,\n            artist: response.item.artists[0].name,\n            albumArt: response.item.album.images[0].url\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://localhost:8888\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Login With Spotify\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \" Now Playing: \", this.state.nowPlaying.name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" By: \", this.state.nowPlaying.artist), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.nowPlaying.albumArt,\n        alt: \"Album Art\",\n        style: {\n          width: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.getNowPlaying();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Check Now Playing\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Test\\Documents\\Spotify-React\\client\\src\\App.js"],"names":["React","Component","SpotifyWebApi","spotifyWebApi","App","params","getHashParams","token","access_token","setAccessToken","state","loggedIn","nowPlaying","name","albumArt","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getMyCurrentPlaybackState","then","response","setState","item","artist","artists","album","images","url","width","getNowPlaying"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport SpotifyWebApi from'spotify-web-api-js';\n\nconst spotifyWebApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor(){\n    super()\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token){\n      spotifyWebApi.setAccessToken(token);\n    }\n    this.state ={\n      loggedIn: token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        albumArt: ''\n      }\n    }\n    if (params.access_token){\n      spotifyWebApi.setAccessToken(params.access_token)\n    }\n  }\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying() {\n      spotifyWebApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        this.setState({\n          nowPlaying: {\n            name: response.item.name,\n            artist: response.item.artists[0].name,\n            albumArt: response.item.album.images[0].url\n          }\n        })\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <a href = 'http://localhost:8888'>\n          <button>Login With Spotify</button>\n        </a>\n        <div> Now Playing: {this.state.nowPlaying.name}</div>\n        <div> By: {this.state.nowPlaying.artist}</div> \n        <div>\n          <img src ={this.state.nowPlaying.albumArt} alt = \"Album Art\" style = {{width: 500}}/>\n        </div>\n        <button onClick={() => this.getNowPlaying()}>\n          Check Now Playing\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}